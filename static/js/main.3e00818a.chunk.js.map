{"version":3,"sources":["store.js","localStorage.js","Components/SearchBar.js","Components/SearchResults.js","Components/Nominations.js","Components/TopBar.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","foundMovies","nominates","isSearchError","searchedTitle","errorSearch","movie","type","persistedState","serializedState","localStorage","getItem","parsedNominates","JSON","parse","err","loadState","store","createStore","state","action","fetchedMovies","length","nominatesImdbIDs","map","imdbID","forEach","indexOf","disableNominate","newNominates","filter","applyMiddleware","thunk","subscribe","stringify","setItem","console","log","saveState","getState","useStyles","makeStyles","theme","root","padding","display","alignItems","input","marginLeft","spacing","flex","width","iconButton","ConnectedSearchBar","connect","places","placesToVisit","dispatch","getMovies","a","axios","get","response","data","Response","movies","Search","props","classes","useState","setMovie","Paper","className","InputBase","placeholder","onKeyDown","e","keyCode","onChange","preventDefault","target","value","IconButton","onClick","ConnectedSearchResults","nominateMovie","Fragment","Typography","variant","Alert","severity","AlertTitle","List","ListItem","key","Title","ListItemText","style","Year","Button","endIcon","disabled","ConnectedNominations","withdrawMovie","flexGrow","marginBottom","title","alignSelf","TopBar","AppBar","position","Toolbar","bottomPush","bottom","paddingBottom","marginTop","Footer","fontSize","href","margin","height","App","Grid","container","item","xs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e00818a.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport axios from 'axios';\nimport {saveState, loadState} from './localStorage'\n\nconst FETCH_FOUND_MOVIES = \"FETCH_FOUND_MOVIES\";\nconst NOMINATE_MOVIE = 'NOMINATE_MOVIE';\nconst WITHDRAW_MOVIE = 'WITHDRAW_MOVIE';\nconst SEARCH_ERROR = 'SEARCH_ERROR'; \n\nlet initialState = {\n    foundMovies: [],\n    nominates: [],\n    isSearchError: false,\n    searchedTitle: '',\n}\n\nconst fetchFoundMovies = (foundMovies) => {\n    return {\n      type: FETCH_FOUND_MOVIES,\n      foundMovies\n    };\n  };\n\nexport const nominateMovie = (movie) => {\n    return {\n      type: NOMINATE_MOVIE,\n      movie\n    };\n  };\n\nexport const withdrawMovie = (movie) => {\n    return {\n        type: WITHDRAW_MOVIE,\n        movie\n    }\n} \n\nconst errorSearch = (movie) => {\n    return {\n        type: SEARCH_ERROR,\n        movie\n    }\n}\n\nexport const getMovies = (movie) => {\nreturn async (dispatch) => {\n    try {\n    let response = await axios.get(`http://www.omdbapi.com/?apikey=c1268e3b&s=${movie}&type=movie`);\n    if (response.data.Response !== \"False\") {\n        let movies = response.data.Search;\n        dispatch(fetchFoundMovies(movies));\n    } else {\n        dispatch(errorSearch(movie))\n    }\n    } catch (error) {\n    console.log(\"Error with finding movie\", error);\n    }\n};\n};\n  \n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_FOUND_MOVIES:\n            let fetchedMovies = action.foundMovies;\n            if (state.nominates && state.nominates.length) {\n                let nominatesImdbIDs = state.nominates.map((movie) => {\n                    return movie.imdbID\n                })\n                fetchedMovies.forEach(movie => {\n                    if (nominatesImdbIDs.indexOf(movie.imdbID) !== -1) movie.disableNominate = true\n                })\n            }\n            return {...state, foundMovies: fetchedMovies, isSearchError: false};\n        case NOMINATE_MOVIE:\n            state.foundMovies.forEach((movie) => {\n                if (movie.imdbID === action.movie.imdbID) movie.disableNominate = true\n            })\n            return {...state, nominates: [...state.nominates, action.movie]}\n        case WITHDRAW_MOVIE:    \n            let newNominates = state.nominates.filter((movie) => {\n                return (movie.imdbID !== action.movie.imdbID)\n            });\n            if (state.foundMovies) {\n            state.foundMovies.forEach((movie) => {\n                if (movie.imdbID === action.movie.imdbID) movie.disableNominate = false\n            })\n            }\n            return {...state, nominates: newNominates}\n        case SEARCH_ERROR:\n            return {...state, isSearchError: true, searchedTitle: action.movie}\n        default:\n            return state;\n    }\n  };\n  \n  const persistedState = loadState(initialState);\n\n  const store = createStore(reducer, persistedState, applyMiddleware(thunk));\n\n  store.subscribe(() => {\n    saveState({\n        nominates: store.getState().nominates\n    });\n  });\n  \n  export default store;\n","export const loadState = (initialState) => {\n    try {\n      const serializedState = localStorage.getItem('state');\n      if (serializedState === null) {\n        return undefined;\n      }\n      let parsedNominates = JSON.parse(serializedState);\n      initialState.nominates = parsedNominates.nominates;\n\n      return initialState;\n    } catch (err) {\n      return initialState;\n    }\n  }; \n\n  export const saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('state', serializedState);\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n  ","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { getMovies } from \"../store\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n      },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        width: 400,\n      },\n      iconButton: {\n        padding: 10,\n      },\n  }));\n\nfunction SearchBar(props) {\n    \n    const classes = useStyles();\n    const [movie, setMovie] = useState(\"\");\n    const getMovies = props.getMovies;\n    \n    return (\n        <Paper className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Movie title\"\n                onKeyDown={(e) => {\n                    if (e.keyCode === 13) getMovies(movie)\n                }}\n                onChange={(e) => { \n                    e.preventDefault();\n                    setMovie(e.target.value)\n                    }}\n                \n            />\n            <IconButton \n                type=\"submit\"\n                className={classes.iconButton}\n                onClick={(e) => { \n                    e.preventDefault()\n                    getMovies(movie)\n                    }} >\n                <SearchIcon />\n            </IconButton>\n        </Paper>\n    )\n} \n\nconst mapStateToProps = (state) => ({\n    places: state.placesToVisit,\n  });\n  \nconst mapDispatchToProps = (dispatch) => ({\n    getMovies: (movie) => dispatch(getMovies(movie)),\n});\n\nconst ConnectedSearchBar = connect(\nmapStateToProps,\nmapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Typography from '@material-ui/core/Typography';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { connect } from \"react-redux\";\nimport { nominateMovie } from \"../store\";\n\n\nfunction SearchResults(props) {\n    \n    const movies = props.foundMovies\n    const nominates = props.nominates\n    const nominateMovie = props.nominateMovie\n    const isSearchError = props.isSearchError\n    const movie = props.searchedTitle\n    \n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\">\n                Movie search result:\n            </Typography>\n        {isSearchError &&\n        <Paper>\n        <Alert severity=\"warning\">\n        <AlertTitle>{`We did not find any movies with \"${movie}\"`}</AlertTitle>\n            Try something else\n        </Alert> \n        </Paper>\n        }\n        {movies.length > 0 &&\n        <Paper>\n            <List >\n                {movies.map((movie) => {\n                    return (\n                        <ListItem key={`${movie.imdbID}${movie.Title}`}>\n                            <ListItemText style={{width: \"80%\"}}>\n                                <Typography variant=\"body2\">\n                                    {`${movie.Title} (year ${movie.Year})`}\n                                </Typography>\n                            </ListItemText>\n                            <Button \n                                type=\"submit\"\n                                endIcon={<ArrowForwardIcon />}\n                                disabled={movie.disableNominate || nominates.length >= 5}\n                                onClick={(e) => { \n                                e.preventDefault()\n                                if (nominates.length < 5) nominateMovie(movie)\n                                }} >\n                                Nominate\n                            </Button>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Paper>\n        }\n    </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    foundMovies: state.foundMovies,\n    nominates: state.nominates,\n    isSearchError: state.isSearchError,\n    searchedTitle: state.searchedTitle\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    nominateMovie: (movie) => dispatch(nominateMovie(movie)),\n});\n\nconst ConnectedSearchResults = connect(\nmapStateToProps,\nmapDispatchToProps\n)(SearchResults);\n\nexport default ConnectedSearchResults;\n\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { connect } from \"react-redux\";\nimport { withdrawMovie } from \"../store\";\n\nfunction Nominations(props) {\n    \n    const nominates = props.nominates;\n    const withdrawMovie = props.withdrawMovie\n    \n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\">\n                Nominees:\n            </Typography>  \n        {nominates.length > 0 &&\n        <Paper> \n            <List >\n                {nominates.map((movie) => {\n                    return (\n                        <ListItem key={`${movie.imdbID}${movie.Title}N`}>\n                            <ListItemText style={{width: \"80%\"}}>\n                                <Typography variant=\"body2\" >\n                                    {`${movie.Title} (year ${movie.Year})`}\n                                </Typography>\n                            </ListItemText>\n                            <Button \n                                type=\"submit\"\n                                endIcon={<DeleteIcon />}\n                                onClick={(e) => { \n                                e.preventDefault()\n                                withdrawMovie(movie)    \n                                }} >\n                                withdraw\n                            </Button>\n                        </ListItem>\n                    );\n                })}\n            </List>\n            {nominates.length >= 5 && \n            <Alert severity=\"success\">\n            <AlertTitle>Yay! You have all nominees in!</AlertTitle>\n                To add something else withdraw one\n            </Alert> \n            }\n        </Paper>\n        }\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    nominates: state.nominates,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    withdrawMovie: (movie) => dispatch(withdrawMovie(movie)),\n});\n\nconst ConnectedNominations = connect(\nmapStateToProps,\nmapDispatchToProps\n)(Nominations);\n\nexport default ConnectedNominations;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 20,\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: 'center'\n  },\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            The Shoppies\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    bottomPush: {\n        bottom: 0,\n        paddingBottom: 10,\n        marginTop: 20\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.bottomPush}>\n        <Typography style={{fontSize: \"12px\"}}>\n        <a href=\"https://icons8.com/icon/46684/movie-projector\">Thank you, Icons8, for the Movie Projector icon</a>\n        </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBar from './Components/SearchBar'\nimport SearchResults from './Components/SearchResults'\nimport Nominations from './Components/Nominations'\nimport TopBar from './Components/TopBar'\nimport Footer from './Components/Footer'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 50,\n    height: 400,\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n    <TopBar />\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <SearchBar />\n      </Grid>\n      <Grid item xs={6}>\n        <SearchResults />\n      </Grid>\n      <Grid item xs={6}>\n        <Nominations />\n      </Grid>\n    </Grid>\n    <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}